<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | K.I.S.S]]></title>
  <link href="http://metooit.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://metooit.github.com/"/>
  <updated>2013-03-23T18:24:07+08:00</updated>
  <id>http://metooit.github.com/</id>
  <author>
    <name><![CDATA[metooit]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux中的查找命令]]></title>
    <link href="http://metooit.github.com/blog/2013/03/23/find-command-in-linux/"/>
    <updated>2013-03-23T12:37:00+08:00</updated>
    <id>http://metooit.github.com/blog/2013/03/23/find-command-in-linux</id>
    <content type="html"><![CDATA[<p>今天是一个很好的周六啊，为什么很好呢？可能是因为心情比较好所以天气比较好所以世界比较美好，o(∩∩)o...哈哈！总之呢，在这个大好的日子里，我觉得很有一点
做些什么的必要啦！</p>

<hr />

<p>早晨六点钟（确切的说是6：25）分的时候起床，然后就和同学一起去打羽毛球啦（PS：这件事情已经坚持了一周了，继续努力），后来还吃了早饭（窃喜：-），然后开
始了崭新的一天……</p>

<hr />

<p>今天呢，我很想总结一下<code>Linux</code>中会用到的各种的查找命令，<code>Linux</code>中的查找包括文件、命令、历史等的查找，希望我能够将自己用到的一些东西尽数总结出来，回
顾也是学习：</p>

<h3>文件的查找：</h3>

<blockquote><p><code>whereis</code> <code>locate</code> <code>find</code></p></blockquote>

<p><code>whereis</code> <code>locate</code>是利用数据库来查找相关文件，所以速度会比使用<code>find</code>命令来的快一些。</p>

<h4>whereis</h4>

<p>使用方法：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>whereis [-bmsu] 文件或者目录名&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>-b  ： 只是查找二进制格式的文件
</span><span class='line'>-m  ： 只是查找在说明文件manual路径下的文件
</span><span class='line'>-s  ： 只是查找source源文件
</span><span class='line'>-u  ： 查找不在上述三个选项中的其他特殊文件</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>注意： 使用不同的用户（普通用户和根用户），查找到的文件位置可能是不一样的，因为毕竟不同等级的用户他们的命令的执行路径不同，这个和$PATH有关。</li>
</ul>


<h4>locate</h4>

<p>使用方法：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>locate [-ir] 关键字&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>-i  ： 忽略大小写
</span><span class='line'>-r  ： 正则表达式查找</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>注意： 这个命令的特点在于它能够根据部分文件名，这个特点也带来了另一个方面的考虑，就是只要是包含你要查找的名称，即使是比它长，也会显示出来。</li>
<li>PS： <code>locate</code>查找的文件是从已经建立的数据库<code>/var/lib/mlocate/</code>里面的数据查找来的，新建文件后查找该文件的话有可能数据库还没有更新呢！手动更新数据
库的话，需要用到一条指令<code>updatedb</code>。这个时间就要长一点了，你懂的。</li>
</ul>


<h4>find</h4>

<p>说到<code>find</code>呢，那要说的就多了啊……</p>

<p>使用方法：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find [PATH] [option] [action]</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><p>与时间相关的参数：</p>

<blockquote><p>-atime -mtime -ctime
-mtime  n : n为数字，意义为在n天之前的“一天之内”修改过得文件
-mtime +n : 列出n天之前（不含n天本身）被更改过的文件
-mtime -n : 列出n天之内（含n天本身）被更改过的文件
-newer file : 列出比file更新的文件</p></blockquote></li>
<li><p>与用户有关的参数：</p>

<blockquote><p>-uid n
-gid n
-user name
-group name
-nouser
-nogroup
这些命令吧，我觉的从字面意思来看就很明白它的意思了，所以不再赘述。</p></blockquote></li>
<li><p>与文件权限及名称有关的参数：</p>

<blockquote><p>-name 文件名 : 查找相应的文件名
-size [+-] SIZE : 查找比SIZE大或小的文件
-type TYPE : 文件的类型有： 一般正规文件（f）、设备文件（b、c）、目录（d）、连接文件（l）、socket（s）、FIFO（p）
-perm mode : 查找文件权限等于mode的文件
-perm -mode
-perm +mode</p></blockquote></li>
</ul>


<p>还有一个很重要的-exec:</p>

<p>怎么说呢？ 我很喜欢这个命令， 就像我在解压一堆文件的时候， 我只能说： 我很喜欢。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find / -perm +7000 -exec ls -l {}\;</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>命令的查找：</h3>

<blockquote><p><code>which</code> <code>type</code></p></blockquote>

<h4>which</h4>

<p>使用方法：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>which -a 命令&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>-a  ： 将所有由PATH目录中可以找到的命令均列出，而不是只有第一个被找到的命令的名称。</span></code></pre></td></tr></table></div></figure></notextile></div>
* 注意： 这里同样有一个问题，和PATH有关的，就是不同身份（是吧，身份很重要）。</p>

<h4>type</h4>

<p>type的作用是区别一个命令是<code>shell</code>自带的，还是外部扩展的命令。如果一个命令是外部扩展的名令，那么加一个<code>-p</code>就可以找到可执行的二进制文件的位置（相当
于which）
使用方法：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>type -p 命令名称&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>-p  ： 找到可执行的二进制文件的位置。（相当于which)</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux 随心小记]]></title>
    <link href="http://metooit.github.com/blog/2013/02/22/linux-quick-view/"/>
    <updated>2013-02-22T14:45:00+08:00</updated>
    <id>http://metooit.github.com/blog/2013/02/22/linux-quick-view</id>
    <content type="html"><![CDATA[<h3>Linux 文件权限的概念</h3>

<h4>基本概念：</h4>

<blockquote><p>-rw-rw-r--  1 prince prince  235 Jan 31 10:20 2013-01-30-hello-world.markdown
[   权限  ]   [用户] [用户组][大小][修改日期]</p></blockquote>

<ul>
<li><p>权限部分：</p></li>
<li><p>第一个字符： <code>d</code>代表目录、 <code>-</code>代表文件、 <code>l</code>代表连接文件</p></li>
<li><p>剩下的九个字符： <code>r</code>代表可读、 <code>w</code>代表可写、 <code>x</code>代表可执行</p></li>
<li><p>大小部分：
大小部分的默认单位是<code>B</code></p></li>
<li><p>时间部分：
如果要查看完整的时间格式，可以使用 <code>ls -l --full-time</code></p></li>
</ul>


<h4>如何改变：</h4>

<ul>
<li><p>改变文件用户组： <code>chgrp</code>
递归更改使用<code>-R</code></p></li>
<li><p>改变文件所有者： <code>chown</code></p></li>
<li><p>改变文件的权限： <code>chmod</code>
两种更改方法： <code>+</code>、 <code>-</code>、 <code>=</code> 方法 和 数字方法, 其中 <code>u</code>、 <code>g</code>、 <code>o</code>、 <code>a</code> 分别代表user, group, others, all</p></li>
</ul>


<h4>目录与文件权限的不同意义：</h4>

<h5>对于文件：</h5>

<ul>
<li><code>r</code> 可读取文件的实际内容</li>
<li><code>w</code> 可编辑、 新增、 修改文件的内容</li>
<li><code>x</code> 该文件有被系统执行的权限</li>
</ul>


<h5>对于目录</h5>

<ul>
<li><code>r</code> 读取目录结构列表的权限</li>
<li><code>w</code> 写入目录的权限： 包括新建文件与目录； 删除已存在的文件或者目录（不论文件的权限为何）； 将已存在的文件或者目录重命名； 转移目录内的文件和目录的位置。</li>
<li><code>x</code> 代表用户能否进入该目录成为工作目录</li>
</ul>


<h3>Linux 目录：</h3>

<h4>几个重要的目录：</h4>

<ul>
<li>/etc 配置文件</li>
<li>/bin 重要的可执行文件</li>
<li>/dev 所需要的设备文件</li>
<li>/lib 执行文件所需要的函数库与内核所需的模块</li>
<li><p>/sbin 重要的系统执行文件</p>

<pre><code>              /
              ├── bin
              ├── boot
              ├── dev
              ├── etc
              ├── home
              ├── lib
              ├── lost+found
              ├── media
              ├── mnt
              ├── opt
              ├── proc
              ├── root
              ├── run
              ├── sbin
              ├── srv
              ├── sys
              ├── tmp
              ├── usr
              ├── var
</code></pre></li>
</ul>


<h4>重点目录：</h4>

<p>/usr : UNIX Software Resource， 里面放置的数据是可分享的不可变动的。
/var : 放置经常变动的文件</p>

<h4>目录相关操作：</h4>

<p><code>cd</code> <code>pwd</code> <code>mkdir</code> <code>rmdir</code></p>

<p>Tips:
* <code>cd -</code> 回到上一个目录
* <code>pwd -P</code> 不显示链接路径而是原本的完整路径
* <code>mkdir -p</code> 创建多层目录
* <code>mkdir -m ??? &lt;dir&gt;</code> 同时设置权限， 否则使用默认的权限
* <code>rmdir -p</code> 连同上层的空目录一起删掉， 要比<code>rm -r</code> 安全</p>

<h4>文件与目录管理：</h4>

<p><code>ls</code> <code>cp</code> <code>rm</code> <code>mv</code></p>

<p>Tips:
* <code>cp -d</code> 若源文件为连接文件， 那么拷贝连接文件而不是文件本身
* <code>cp -i</code> 覆盖前询问
* <code>cp -l</code> 硬连接， <code>cp -s</code> 软连接
* <code>cp -a</code> 保持各种属性不变
* 在命令前面加上<code>\</code>, 可以忽略掉命令的<code>alias</code>指定参数</p>

<h4>文件内容查询：</h4>

<p><code>cat</code> <code>tac</code> <code>nl</code> <code>more</code> <code>less</code> <code>head</code> <code>tail</code> <code>od</code></p>

<p>Tips:
* <code>cat -n</code> 带行号
* <code>od</code> 以二进制方式读取文件内容</p>

<h4>文件目录的默认权限与隐藏权限：</h4>

<p><code>umask</code> 目前用户在新建目录或者文件的时候权限默认值， 使用<code>umask -S</code>更加直观地显示</p>

<h4>查看文件类型：</h4>

<p><code>file</code> 简单地判断文件的类型</p>

<h4>脚本文件名的查询：</h4>

<p><code>which</code></p>

<h4>文件名的查找：</h4>

<p><code>whereis [bmsu] &lt;name&gt;</code> 、 <code>locate</code>、 <code>find</code></p>

<p>Tips:
* <code>locate</code> 是根据已有的数据库来查找的，比较快 /var/lib/mlocate/mlocate.db
* <code>find [PATH] [opinion] [action]</code> ---> <code>find / -perm +7000 -exec ls -l {} \;</code></p>

<h3>文件与文件系统的压缩与打包</h3>

<h3>几个常见的压缩文件扩展名：</h3>

<ul>
<li>.Z compress程序压缩的文件</li>
<li>.gz gzip程序压缩的文件</li>
<li>.bz2 bzip2程序压缩的文件</li>
<li>.tar tar程序打包的数据，并没有压缩过</li>
<li>.tar.gz tar程序打包的文件，其中经过gzip的压缩</li>
<li>.tar.bz2 tar程序打包的文件，其中经过bzip2压缩过</li>
</ul>


<h3>压缩、 查看与解压：</h3>

<ul>
<li><code>compress</code> <code>uncompress</code></li>
<li><code>gzip</code> <code>zcat</code></li>
<li><code>bzip2</code> <code>bzcat</code></li>
</ul>


<h3>打包：</h3>

<ul>
<li><p><code>tar</code>
tar [-] A --catenate --concatenate | c --create | d --diff --compare | --delete | r --append | t --list | --test-label | u --update | x
--extract --get [options] [pathname ...]</p></li>
<li><p>压缩： <code>tar -jcv -f filename.tar.bz2 要被解压缩的文件或目录名称</code></p></li>
<li>查询： <code>tar -jtv -f filename.tar.bz2</code></li>
<li>解压： <code>tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The useage of SCREEN]]></title>
    <link href="http://metooit.github.com/blog/2013/02/13/the-useage-of-screen/"/>
    <updated>2013-02-13T16:23:00+08:00</updated>
    <id>http://metooit.github.com/blog/2013/02/13/the-useage-of-screen</id>
    <content type="html"><![CDATA[<p>Linux <code>SCREEN</code> 的用法：</p>

<h1>窗口基本操作：</h1>

<ul>
<li><code>Ctrl + a</code> + <code>c</code>  产生一个新窗口（new window）</li>
<li><code>Ctrl + a</code> + <code>n</code>  下一个窗口（next window）</li>
<li><code>Ctrl + a</code> + <code>p</code>  上一个窗口（previous window）</li>
<li><code>Ctrl + a</code> + <code>"</code>  从列表中选择窗口（choose from the list）</li>
<li><code>Ctrl + a</code> + <code>Ctrl +a</code> 上一个查看过的窗口</li>
<li><code>Ctrl + a</code> + <code>k</code> 移除窗口</li>
<li><code>Ctrl + a</code> + <code>Space</code> 下一个窗口（Next window）</li>
</ul>


<h1>分屏操作：</h1>

<ul>
<li><code>Ctrl + a</code> + <code>%</code> 垂直分割窗口。</li>
<li><code>Ctrl + a</code> + <code>|</code> 水平分割窗口.</li>
<li><code>Ctrl + a</code> + <code>tab</code> 移动到分割后的另一个区域。（同时可以用方向键完成相同的操作）</li>
<li><code>Ctrl + a</code> + <code>:resize</code> 重新确定区域的大小</li>
<li><code>Ctrl + a</code> + <code>:fit</code> 窗口大小适应终端的大小</li>
<li><code>Ctrl + a</code> + <code>:remove</code> 移除区域。</li>
</ul>


<p>今天<code>Emacs</code>快捷键按顺手了忽然间按到了 <code>Ctrl + a</code> + <code>o</code> 居然可以切换窗口内的区域， 不错不错， 记录之～</p>
]]></content>
  </entry>
  
</feed>
