<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Note | K.I.S.S]]></title>
  <link href="http://metooit.github.com/blog/categories/note/atom.xml" rel="self"/>
  <link href="http://metooit.github.com/"/>
  <updated>2013-02-22T15:43:53+08:00</updated>
  <id>http://metooit.github.com/</id>
  <author>
    <name><![CDATA[metooit]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[『Python3 程序开发指南』 阅读笔记]]></title>
    <link href="http://metooit.github.com/blog/2013/02/08/notes-for-programming-in-python-3/"/>
    <updated>2013-02-08T12:17:00+08:00</updated>
    <id>http://metooit.github.com/blog/2013/02/08/notes-for-programming-in-python-3</id>
    <content type="html"><![CDATA[<h2>数据类型</h2>

<h3>1.1 标识符与关键字：</h3>

<ul>
<li>不要使用预定义标识符对自定义标识符进行命名

<blockquote><p>dir() 函数可以返回对象的属性列表
不带参数是返回<code>python</code>的内置属性列表, 调用方式为  <code>dir(__builtins__)</code>
大写字母引导的是异常名，而其他的是函数名和数据类型名</p></blockquote></li>
<li>关于下滑线的使用：应该避免使用</li>
</ul>


<!-- more -->


<h3>1.2 Integral 类型：</h3>

<p><code>Python</code>提供了两种<code>Integral</code>类型，即int 和 bool。0与<code>false</code>都表示<code>false</code>， 其他任意数和<code>true</code>都表示<code>true</code>。</p>

<h4>1.2.1 整数：</h4>

<ul>
<li>十进制：xxxx</li>
<li>二进制: 0bxxxx</li>
<li>八进制: 0oxxxx</li>
<li>十六进制： 0xxxxx</li>
</ul>


<blockquote><p>数值操作符与函数</p></blockquote>

<table>
<thead>
<tr>
<th></th>
<th> 语法         </th>
<th align="center"> 描述                                              </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> x + y        </td>
<td align="center"> 相加                                              |</td>
</tr>
<tr>
<td></td>
<td> x - y        </td>
<td align="center"> 相减                                              |</td>
</tr>
<tr>
<td></td>
<td> x * y        </td>
<td align="center"> 相乘                                              |</td>
</tr>
<tr>
<td></td>
<td> x / y        </td>
<td align="center"> 相除                                              |</td>
</tr>
<tr>
<td></td>
<td> x // y       </td>
<td align="center"> 舍弃小数部分， 使得结果总为整数 （参见round()）   |</td>
</tr>
<tr>
<td></td>
<td> x % y        </td>
<td align="center"> 取余                                              |</td>
</tr>
<tr>
<td></td>
<td> x ** y       </td>
<td align="center"> 计算x的y次幂， （参见pow()函数）                  |</td>
</tr>
<tr>
<td></td>
<td> abs(x)       </td>
<td align="center"> 取得绝对值                                        |</td>
</tr>
<tr>
<td></td>
<td> divmod(x, y) </td>
<td align="center"> 以二元组形式返回商和余数                          |</td>
</tr>
<tr>
<td></td>
<td> pow(x, y)    </td>
<td align="center"> 同 **                                             |</td>
</tr>
<tr>
<td></td>
<td> pow(x, y, z) </td>
<td align="center"> (x ** y) % z                                      |</td>
</tr>
<tr>
<td></td>
<td> round(x, n)  </td>
<td align="center"> x 四舍五入后的n 位整数                            |</td>
</tr>
</tbody>
</table>


<blockquote><p>整数转换函数</p></blockquote>

<table>
<thead>
<tr>
<th>函数 </th>
<th> 作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>bin(i) </td>
<td> 返回i的二进制表示</td>
</tr>
<tr>
<td>hex(i) </td>
<td> 返回i的十六进制表示</td>
</tr>
<tr>
<td>int(x) </td>
<td> 将x转换为整数对象</td>
</tr>
<tr>
<td>oct(i) </td>
<td> 返回i的八进制表示</td>
</tr>
<tr>
<td>int(s, base) </td>
<td> 可以指定基数</td>
</tr>
</tbody>
</table>


<blockquote><p>逻辑与位操作</p></blockquote>

<p>| ^ &amp; &lt;&lt; >> ~</p>

<h4>1.2.2 布尔型：</h4>

<p>True False 是python的两个内置的布尔型对象。</p>

<h3>1.3 浮点类型：</h3>

<h4>1.3.1 浮点数：</h4>

<h4>1.3.2 复数类型：</h4>

<p>复数的两个部分都以属性名的形式存在，分别为real , imag.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>literal  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">z</span> <span class="o">=</span> <span class="o">-</span><span class="mf">89.5</span> <span class="o">+</span> <span class="mf">2.125j</span>
</span><span class='line'><span class="n">z</span><span class="o">.</span><span class="n">real</span><span class="p">(),</span> <span class="n">z</span><span class="o">.</span><span class="n">imag</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<code>conjugate()</code>函数用于改变虚数部分的符号，共轭。 要使用复数先要导入<code>cmath</code>模块，该函数提供了<code>math</code>函数中大多数三角函数和对数函数的复数版。</p>

<h4>1.3.3 十进制数字：</h4>

<p>decimal模块， 需要是再help()吧。现在没有必要记住那么多的函数，况且我也记不住啊！</p>

<h3>1.4 字符串：</h3>

<p>由于.py文件默认使用UTF-8编码，我们可以在字符串字面值中写入任意的Unicode字符放置在字符串内。例如：
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>euros  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">euros</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\N{euro sign}\u20AC\U000020AC</span><span class="s">&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
如果需要知道字符串中莫个特定字符的Unicode字元，可以使用内置的<code>ord()</code>函数。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>ord  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nb">ord</span><span class="p">(</span><span class="n">euros</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'><span class="nb">hex</span><span class="p">(</span><span class="nb">ord</span><span class="p">(</span><span class="n">euros</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
类似的也可以用内置的chr()函数将有效字元的任意整数转换成相应的Unicode字符。</p>

<h4>1.4.1 比较字符串：</h4>

<h4>1.4.2 字符串的分片与步距：</h4>

<h4>1.4.3 字符串操作与方法：</h4>

<p>参见help(str)。
如果我们需要在某个字符串中找到另一个字符串所在的位置，有两种方法：
* str.index(), 该方法返回字符串的索引位置，或者在失败时产生一个<code>ValueErr</code>异常。
* str.find(), 该方法返回字符产的所以位置， 或者在失败时返回-1</p>

<h4>1.4.4 使用<code>str.format()</code>方法进行字符串的格式化：</h4>

<ul>
<li>字段名：
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>format  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="s">&quot;{who} turned {age} this year.&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">who</span><span class="o">=</span><span class="s">&quot;she&quot;</span><span class="p">,</span> <span class="n">age</span><span class="o">=</span><span class="mi">88</span><span class="p">)</span>
</span><span class='line'><span class="s">&quot;The {who} was {0} last week.&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="n">who</span><span class="o">=</span><span class="s">&quot;boy&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
另外， 字段名可以引用集合数据类型，比如列表：
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>format2  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">stock</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;paper&quot;</span><span class="p">,</span> <span class="s">&quot;envelopes&quot;</span><span class="p">,</span> <span class="s">&quot;notepads&quot;</span><span class="p">,</span> <span class="s">&quot;paper clips&quot;</span><span class="p">]</span>
</span><span class='line'><span class="s">&quot;We have {0[1]} and {0[2]} in stock.&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">stock</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
其中， 0是引用的位置参数， {0[1]}代表的是sotck参数的第二个数据项。
python3.1 开始， 忽略字段名成为可能。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>format3  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">element</span> <span class="o">=</span> <span class="s">&quot;Sliver&quot;</span>
</span><span class='line'><span class="n">number</span> <span class="o">=</span> <span class="mi">47</span>
</span><span class='line'><span class="s">&quot;Element {number} is {element}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="nb">locals</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
函数<code>locals()</code>返回还在作用范围内的局部变量，</strong>用于映射拆分。</li>
<li>转换：

<blockquote><p>s 用于强制使用字符串形式
r 用于强制使用表象形式
a 用于强制使用表象形式，仅限于ASCII字符。</p></blockquote></li>
<li>格式规约：
这个以后再看吧……</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RailsGuides 阅读笔记]]></title>
    <link href="http://metooit.github.com/blog/2013/02/08/notes-for-reading-the-railsguides/"/>
    <updated>2013-02-08T11:58:00+08:00</updated>
    <id>http://metooit.github.com/blog/2013/02/08/notes-for-reading-the-railsguides</id>
    <content type="html"><![CDATA[<p><a href="http://guides.ruby.tw/rails3/getting_started.html">RailsGuides</a>是Ruby on Rails 官方网站上的一个tutorial， 下面是我通过阅读学习所做的一些笔记。</p>

<hr />

<p>刚刚准备信心满满地开始看得时候，打开网页的第一条是<code>前提条件</code>：好吧，<code>Rails</code>是一套<code>Ruby</code>的web框架，如果对<code>Ruby</code>一无所知就学习<code>Rails</code>，学习曲线会很陡峭。 于是，我决定还是先看一看它提供的文档。</p>

<hr />

<p>继续在这里写吧，昨天看了<code>Ruby</code>的一个教程，初步了解了一下<code>Ruby</code>语言本身， 现在继续看<code>Rails</code>。</p>

<hr />

<h2>1. 什么是<code>Rails</code>：</h2>

<p><code>Ruby</code>的网络开发框架。<code>Rails</code>的原则是：
* DRY
* Convention Over Configuration
* REST</p>

<!-- more -->


<h3>1.1 MVC架构：</h3>

<ul>
<li>Modles: 应用程序的资料和操作资料的逻辑。</li>
<li>Views: 应用程序的使用者界面。</li>
<li>Controllers: M和V之间的粘着剂</li>
</ul>


<h3>1.2 <code>Rails</code>元件：</h3>

<p><a href="http://guides.ruby.tw/rails3/getting_started.html">参见</a></p>

<h3>1.3 REST</h3>

<ul>
<li>在系统部件之间实现资源状态的转换</li>
<li>使用URLs来代表资源（Resourses）</li>
</ul>


<h2>2. 建立Rails项目：</h2>

<ul>
<li>rails new <code>项目名称</code></li>
<li>cd <code>项目名称</code></li>
</ul>


<blockquote><p>注： 每个目录以及文件的作用参见<a href="http://guides.ruby.tw/rails3/getting_started.html">这里</a></p></blockquote>

<ul>
<li>安装必须的<code>gems</code>：这里是一个简单的项目，所以直接 bundle install</li>
<li>设定数据库： 在这个目录下-> <code>config/database.yml</code></li>
<li>建立数据库： rake db:create</li>
</ul>


<blockquote><p>注：<code>rake</code>是<code>Rails</code>中广泛运用的通用型命令行工具。查看所有可用的命令可以<code>rake -T</code>。</p>

<p>这里要记录一个遇到的问题：
我在创建数据库的时候遇到了一个问题：“could not find a javascript runtime”
那么肯定是没有<code>javascript</code>的运行环境了，安装了一个<code>Node.js</code>
安装过程参考<a href="https://github.com/joyent/node">项目主页</a></p></blockquote>

<h2>3. Hello Rails</h2>

<h3>3.1 启动<code>Rails</code>服务器：</h3>

<p><code>rails server</code>启动<code>Mongrel(WEBrick)</code>服务器，当然也可以用其他服务器。</p>

<blockquote><p>浏览器访问 <code>http://localhost:3000</code>,可以看到rails预设的网页。
<img src="/pictures/rails-server-start.png" width="800" height="600" title="rails-server-start rails-server-start" >
关闭服务器的话使用<code>Ctrl-c</code>
如果是production mode的话，修改任何档案都必须重启服务器才会有效果。</p></blockquote>

<h3>3.2 Say "hello" to Rails</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails generate controller home index</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在app/views/home/index.html.erb中加入：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>Hello Rails&lt;/h1>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>下面设定首页：
* 删除预设的档案：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rm public/index.html</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>然后， 告诉<code>Rails</code>我真正的首页在哪里：编辑config/routes.rb。</li>
</ul>


<p><img src="/pictures/hello-rails.png" title="hello-rails" ></p>

<h2>4. 使用scaffolding快速上手：</h2>

<h2>5. 建立<code>Resource</code>:</h2>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails generate scaffold Post name:string title:string content:text</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><img src="/pictures/scaffold-form.png" title="scaffold-form scaffold-form" ></p>

<ul>
<li><p>然后执行Migration
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake db:migration</span></code></pre></td></tr></table></div></figure></notextile></div>
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>==  CreatePosts: migrating ====================================================
</span><span class='line'>-- create_table(:posts)
</span><span class='line'> -> 0.0018s
</span><span class='line'>==  CreatePosts: migrated (0.0019s) ===========================================</span></code></pre></td></tr></table></div></figure></notextile></div></p></li>
<li><p>增加超链接： 利用官方的<code>link_to</code>方法来增加一个文章列表的超链接。</p></li>
</ul>


<p><img src="/pictures/link_to.png" title="link_to" ></p>

<p><img src="/pictures/listing-posts.png" title="listing-posts" ></p>

<ul>
<li>新增验证功能： 在<code>app/modles/post.rb</code>中加入如下代码增加了验证功能：</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Post &lt; ActiveRecord::Base
</span><span class='line'>  attr_accessible :content, :name, :title&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>  validates :name,  :presence => true
</span><span class='line'>  validates :title, :presence => true,&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>                :length   =&gt; { :minimum =&gt; 5 }
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>end</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><img src="/pictures/validation.png" title="validation" ></p>

<ul>
<li><p>使用Console: console可以在<code>terminal</code>中执行代码。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails console</span></code></pre></td></tr></table></div></figure></notextile></div></p></li>
<li><p>列出所有文章：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def index
</span><span class='line'>  @posts = Post.all&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>  respond_to do |format|&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>format.html # index.html.erb
</span><span class='line'>format.json { render json: @posts }
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure></notextile></div></p></li>
</ul>


<p>其中的<code>@posts</code>在app/views/posts/index.html中：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>Listing posts&lt;/h1>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;table>
</span><span class='line'>  &lt;tr>
</span><span class='line'>    &lt;th>Name&lt;/th>
</span><span class='line'>    &lt;th>String&lt;/th>
</span><span class='line'>    &lt;th>Title&lt;/th>
</span><span class='line'>    &lt;th>String&lt;/th>
</span><span class='line'>    &lt;th>Content&lt;/th>
</span><span class='line'>    &lt;th>Text&lt;/th>
</span><span class='line'>    &lt;th>&lt;/th>
</span><span class='line'>    &lt;th>&lt;/th>
</span><span class='line'>    &lt;th>&lt;/th>
</span><span class='line'>  &lt;/tr>
</span><span class='line'>
</span><span class='line'>&lt;% @posts.each do |post| %>
</span><span class='line'>  &lt;tr>
</span><span class='line'>    &lt;td>&lt;%= post.name %>&lt;/td>
</span><span class='line'>    &lt;td>&lt;%= post.string %>&lt;/td>
</span><span class='line'>    &lt;td>&lt;%= post.title %>&lt;/td>
</span><span class='line'>    &lt;td>&lt;%= post.string %>&lt;/td>
</span><span class='line'>    &lt;td>&lt;%= post.content %>&lt;/td>
</span><span class='line'>    &lt;td>&lt;%= post.text %>&lt;/td>
</span><span class='line'>    &lt;td>&lt;%= link_to 'Show', post %>&lt;/td>
</span><span class='line'>    &lt;td>&lt;%= link_to 'Edit', edit_post_path(post) %>&lt;/td>
</span><span class='line'>    &lt;td>&lt;%= link_to 'Destroy', post, method: :delete, data: { confirm: 'Are you sure?' } %>&lt;/td>
</span><span class='line'>  &lt;/tr>
</span><span class='line'>&lt;% end %>
</span><span class='line'>&lt;/table>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;br />
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p>&lt;%= link_to 'New Post', new_post_path %></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><p>定制Layout的版型：
<code>layouts</code>使用来包裹<code>views</code>的。app/views/layouts/application.html.erb定制输出的样式。</p></li>
<li><p>新建文档：：
app/views/posts/new.html.erb</p></li>
</ul>


<p>&lt;%= render 'form' =%>是第一次遇到<code>partials</code>。<code>partials</code>是一个HTML和Ruby的代码片段。可以在其他地方重复使用。</p>

<p>表单内容在 views/posts/<em>form.html.erb</em> 档案中。</p>

<ul>
<li>好吧， 下面是一些功能的实现， 我需要好好静下心来看一看。</li>
</ul>


<p><a href="http://guides.rubyonrails.org/getting_started.html">RailsGuides English</a></p>
]]></content>
  </entry>
  
</feed>
