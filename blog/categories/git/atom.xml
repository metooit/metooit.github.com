<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git | K.I.S.S]]></title>
  <link href="http://metooit.github.com/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://metooit.github.com/"/>
  <updated>2013-03-07T12:48:14+08:00</updated>
  <id>http://metooit.github.com/</id>
  <author>
    <name><![CDATA[metooit]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git 工作流程]]></title>
    <link href="http://metooit.github.com/blog/2013/03/07/git-work-flow/"/>
    <updated>2013-03-07T11:46:00+08:00</updated>
    <id>http://metooit.github.com/blog/2013/03/07/git-work-flow</id>
    <content type="html"><![CDATA[<p>Git是我最常用的版本控制工具， 当然也是我喜欢的工具之一， 我想要写一篇系统的文章来总结一下我在平时使用中总是要用到的一些<code>Git</code>的命令和技巧等， 来记录使用<code>Git</code>工作的流程。</p>

<hr />

<h2>Why Git?</h2>

<p><code>Git</code>的起源和开源运动的进行颇有渊源， 它就诞生于<code>Linux</code>兴起的那个伟大的时代， <code>Git</code>的出现正是<code>黑客精神</code>的体现， 代表了黑客们对于自由分享的向往和不懈地执着地努力！</p>

<blockquote><p>Git起源：
Linux内核最初的维护工作都是提交补丁和保存归档， 但是从2002年开始使用分布式版本管理系统<code>BitKeeper</code>来管理， 但是后者于2005年收回了Linux开源社区免费使用的权利， 于是， 为了避免重蹈复辙， Linus Torvalds 决定开发一套开源的版本控制系统， 然后Git就此诞生了， 不得不佩服这样一群黑客的伟大创举， 再次向他们致敬！</p></blockquote>

<h3>Git 的原则：</h3>

<p>说到Git的原则， 我不禁想到了<code>Unix</code>的原则， 可以说它们在某些方面是一脉相乘的：
* 简洁
* 速度
* 分布式
* 并发支持</p>

<h3>Git 很方便：</h3>

<ul>
<li>直接记录快照， 而不关心具体的数据变化</li>
<li>近乎所有的操作都在本地执行</li>
<li>时刻保持数据完整性</li>
<li>多数操作仅仅是添加数据</li>
</ul>


<p>Git 有如此多的Sexy的特性， 让人怎么能够不喜欢呢？ 正是因为有了这些特性， Git让版本控制变得不再让人头疼。</p>

<hr />

<h2>How To Install Git?</h2>

<p>在<code>Linux</code>系统上的安装很简单：只要调用系统默认的软件包管理器使用命令安装就好了
比如：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ubuntu系统：&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;blockquote>&lt;p>sudo apt-get install git
</span><span class='line'>fedora系统：
</span><span class='line'>sudo yum install git</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<h2>And The Configuration?</h2>

<p>Git 的配置文件可以分为三个层级：
* /etc/gitconfig 中所配置的是系统中所有用户的通用配置。
如果使用：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;blockquote>&lt;p>git config --system</span></code></pre></td></tr></table></div></figure></notextile></div>
修改的就是这个文件了</p></blockquote>

<ul>
<li><p>~/gitconfig 中所做的配置只是针对当前的用户
如果使用：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;blockquote>&lt;p>git config --global</span></code></pre></td></tr></table></div></figure></notextile></div>
修改的就是这个文件了</p></blockquote></li>
<li><p>最后一级就是当前项目中<code>.git</code>文件夹下的<code>config</code>配置文件了， 这个配置仅对当前项目有效。</p></li>
</ul>


<p>所以， 安装<code>Git</code>完成后， 就需要对<code>Git</code>进行配置了：</p>

<h3>用户信息：</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git config --global user.name "xxxx"
</span><span class='line'>$ git config --global user.email "xxxx@xxxx.xxx"</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>文本编辑器：</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git config --global core.editor vi</span></code></pre></td></tr></table></div></figure></notextile></div>
当然是选择我最喜欢的<code>Vim</code>啦！～</p>

<h3>差异分析工具：</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git config --global merge.tool vimdiff</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>查看当前的配置信息：</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git config --list</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<hr />

<!-- more -->

]]></content>
  </entry>
  
</feed>
