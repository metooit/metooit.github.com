<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python, | K.I.S.S]]></title>
  <link href="http://metooit.github.com/blog/categories/python-/atom.xml" rel="self"/>
  <link href="http://metooit.github.com/"/>
  <updated>2013-02-09T23:34:44+08:00</updated>
  <id>http://metooit.github.com/</id>
  <author>
    <name><![CDATA[metooit]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[『Python3 程序开发指南』 阅读笔记]]></title>
    <link href="http://metooit.github.com/blog/2013/02/08/notes-for-programming-in-python-3/"/>
    <updated>2013-02-08T12:17:00+08:00</updated>
    <id>http://metooit.github.com/blog/2013/02/08/notes-for-programming-in-python-3</id>
    <content type="html"><![CDATA[<h2>数据类型</h2>

<h3>1.1 标识符与关键字：</h3>

<ul>
<li>不要使用预定义标识符对自定义标识符进行命名

<blockquote><p>dir() 函数可以返回对象的属性列表
不带参数是返回<code>python</code>的内置属性列表, 调用方式为  <code>dir(__builtins__)</code>
大写字母引导的是异常名，而其他的是函数名和数据类型名</p></blockquote></li>
<li>关于下滑线的使用：应该避免使用</li>
</ul>


<!-- more -->


<h3>1.2 Integral 类型：</h3>

<p><code>Python</code>提供了两种<code>Integral</code>类型，即int 和 bool。0与<code>false</code>都表示<code>false</code>， 其他任意数和<code>true</code>都表示<code>true</code>。</p>

<h4>1.2.1 整数：</h4>

<ul>
<li>十进制：xxxx</li>
<li>二进制: 0bxxxx</li>
<li>八进制: 0oxxxx</li>
<li>十六进制： 0xxxxx</li>
</ul>


<blockquote><p>数值操作符与函数</p></blockquote>

<table>
<thead>
<tr>
<th></th>
<th> 语法         </th>
<th align="center"> 描述                                              </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> x + y        </td>
<td align="center"> 相加                                              |</td>
</tr>
<tr>
<td></td>
<td> x - y        </td>
<td align="center"> 相减                                              |</td>
</tr>
<tr>
<td></td>
<td> x * y        </td>
<td align="center"> 相乘                                              |</td>
</tr>
<tr>
<td></td>
<td> x / y        </td>
<td align="center"> 相除                                              |</td>
</tr>
<tr>
<td></td>
<td> x // y       </td>
<td align="center"> 舍弃小数部分， 使得结果总为整数 （参见round()）   |</td>
</tr>
<tr>
<td></td>
<td> x % y        </td>
<td align="center"> 取余                                              |</td>
</tr>
<tr>
<td></td>
<td> x ** y       </td>
<td align="center"> 计算x的y次幂， （参见pow()函数）                  |</td>
</tr>
<tr>
<td></td>
<td> abs(x)       </td>
<td align="center"> 取得绝对值                                        |</td>
</tr>
<tr>
<td></td>
<td> divmod(x, y) </td>
<td align="center"> 以二元组形式返回商和余数                          |</td>
</tr>
<tr>
<td></td>
<td> pow(x, y)    </td>
<td align="center"> 同 **                                             |</td>
</tr>
<tr>
<td></td>
<td> pow(x, y, z) </td>
<td align="center"> (x ** y) % z                                      |</td>
</tr>
<tr>
<td></td>
<td> round(x, n)  </td>
<td align="center"> x 四舍五入后的n 位整数                            |</td>
</tr>
</tbody>
</table>


<blockquote><p>整数转换函数</p></blockquote>

<table>
<thead>
<tr>
<th>函数 </th>
<th> 作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>bin(i) </td>
<td> 返回i的二进制表示</td>
</tr>
<tr>
<td>hex(i) </td>
<td> 返回i的十六进制表示</td>
</tr>
<tr>
<td>int(x) </td>
<td> 将x转换为整数对象</td>
</tr>
<tr>
<td>oct(i) </td>
<td> 返回i的八进制表示</td>
</tr>
<tr>
<td>int(s, base) </td>
<td> 可以指定基数</td>
</tr>
</tbody>
</table>


<blockquote><p>逻辑与位操作</p></blockquote>

<p>| ^ &amp; &lt;&lt; >> ~</p>

<h4>1.2.2 布尔型：</h4>

<p>True False 是python的两个内置的布尔型对象。</p>

<h3>1.3 浮点类型：</h3>

<h4>1.3.1 浮点数：</h4>

<h4>1.3.2 复数类型：</h4>

<p>复数的两个部分都以属性名的形式存在，分别为real , imag.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>literal  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">z</span> <span class="o">=</span> <span class="o">-</span><span class="mf">89.5</span> <span class="o">+</span> <span class="mf">2.125j</span>
</span><span class='line'><span class="n">z</span><span class="o">.</span><span class="n">real</span><span class="p">(),</span> <span class="n">z</span><span class="o">.</span><span class="n">imag</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<code>conjugate()</code>函数用于改变虚数部分的符号，共轭。 要使用复数先要导入<code>cmath</code>模块，该函数提供了<code>math</code>函数中大多数三角函数和对数函数的复数版。</p>

<h4>1.3.3 十进制数字：</h4>

<p>decimal模块， 需要是再help()吧。现在没有必要记住那么多的函数，况且我也记不住啊！</p>

<h3>1.4 字符串：</h3>

<p>由于.py文件默认使用UTF-8编码，我们可以在字符串字面值中写入任意的Unicode字符放置在字符串内。例如：
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>euros  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">euros</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\N{euro sign}\u20AC\U000020AC</span><span class="s">&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
如果需要知道字符串中莫个特定字符的Unicode字元，可以使用内置的<code>ord()</code>函数。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>ord  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="nb">ord</span><span class="p">(</span><span class="n">euros</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'><span class="nb">hex</span><span class="p">(</span><span class="nb">ord</span><span class="p">(</span><span class="n">euros</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
类似的也可以用内置的chr()函数将有效字元的任意整数转换成相应的Unicode字符。</p>

<h4>1.4.1 比较字符串：</h4>

<h4>1.4.2 字符串的分片与步距：</h4>

<h4>1.4.3 字符串操作与方法：</h4>

<p>参见help(str)。
如果我们需要在某个字符串中找到另一个字符串所在的位置，有两种方法：
* str.index(), 该方法返回字符串的索引位置，或者在失败时产生一个<code>ValueErr</code>异常。
* str.find(), 该方法返回字符产的所以位置， 或者在失败时返回-1</p>

<h4>1.4.4 使用<code>str.format()</code>方法进行字符串的格式化：</h4>

<ul>
<li>字段名：
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>format  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="s">&quot;{who} turned {age} this year.&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">who</span><span class="o">=</span><span class="s">&quot;she&quot;</span><span class="p">,</span> <span class="n">age</span><span class="o">=</span><span class="mi">88</span><span class="p">)</span>
</span><span class='line'><span class="s">&quot;The {who} was {0} last week.&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="n">who</span><span class="o">=</span><span class="s">&quot;boy&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
另外， 字段名可以引用集合数据类型，比如列表：
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>format2  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">stock</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;paper&quot;</span><span class="p">,</span> <span class="s">&quot;envelopes&quot;</span><span class="p">,</span> <span class="s">&quot;notepads&quot;</span><span class="p">,</span> <span class="s">&quot;paper clips&quot;</span><span class="p">]</span>
</span><span class='line'><span class="s">&quot;We have {0[1]} and {0[2]} in stock.&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">stock</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
其中， 0是引用的位置参数， {0[1]}代表的是sotck参数的第二个数据项。
python3.1 开始， 忽略字段名成为可能。
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>format3  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">element</span> <span class="o">=</span> <span class="s">&quot;Sliver&quot;</span>
</span><span class='line'><span class="n">number</span> <span class="o">=</span> <span class="mi">47</span>
</span><span class='line'><span class="s">&quot;Element {number} is {element}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="nb">locals</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
函数<code>locals()</code>返回还在作用范围内的局部变量，</strong>用于映射拆分。</li>
<li>转换：

<blockquote><p>s 用于强制使用字符串形式
r 用于强制使用表象形式
a 用于强制使用表象形式，仅限于ASCII字符。</p></blockquote></li>
<li>格式规约：
这个以后再看吧……</li>
</ul>

]]></content>
  </entry>
  
</feed>
